public with sharing class MaintenanceRequestHelper {

	public static void updateWorkOrders() {
		// TODO: Complete the method to update workorders
		// To When an existing maintenance request of type Repair or Routine Maintenance is Closed,
		// you create a new maintenance request for a future routine checkup.
		List<Case> newmaintenanceRequestList = new List<Case>();

		List<AggregateResult> minCycle = [SELECT MIN(Maintenance_Cycle__c) cy FROM Product2];
		Integer myInt =  Integer.valueOf(minCycle[0].get('cy'));

		for (Case mr : [SELECT Id,Vehicle__c,Equipment__c,Type,Subject,
		                Date_Reported__c,Date_Due__c,Status,CreatedDate,
		                (SELECT Id,Equipment__r.Lifespan_Months__c,Equipment__r.Maintenance_Cycle__c
		                 FROM Work_Parts__r)
		                FROM Case WHERE Id IN:trigger.new
		                AND Status = 'Closed' AND (Type = 'Repair' OR Type = 'Routine Maintenance')]) {
			// Create new Maintenance Request:
			Case newRequest = new Case();
			newRequest.Vehicle__c = mr.Vehicle__c;
			newRequest.Equipment__c = mr.Equipment__c;
			newRequest.Type = 'Routine Maintenance';
			newRequest.Subject = 'AutoGenerated Request';
			newRequest.Date_Reported__c = System.today();
			newRequest.Origin = 'Phone';
			// Next due Date to be defined based on the Related Work Part Records Equipments
			// Lifespan_Months__c field
			newRequest.Date_Due__c = System.today().addDays(myInt);
			newmaintenanceRequestList.add(newRequest);

		}
		Database.insert(newmaintenanceRequestList);
	}

	/* private static Date calculateDueDate(List<Work_Part__c> relatedWorkParts,Date reportedDate){
	    Date finalDueDate;
	    Decimal smallestMaintenanceCycle = (relatedWorkParts != null && relatedWorkParts.size() > 0)
	                                        ? relatedWorkParts[0].Equipment__r.Maintenance_Cycle__c
	                                        : 0;
	    for (Work_Part__c wPart : relatedWorkParts) {
	        if(smallestMaintenanceCycle > wPart.Equipment__r.Maintenance_Cycle__c) {
	            smallestMaintenanceCycle = wPart.Equipment__r.Maintenance_Cycle__c;
	        }
	        finalDueDate = reportedDate.addDays((Integer)smallestMaintenanceCycle);
	    }
	    return finalDueDate;
	   } */

}